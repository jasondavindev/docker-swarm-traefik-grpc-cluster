version: "3.7"

services:
  traefik:
    image: traefik:v2.0.7
    command:
      - --log.level=DEBUG
      - --api.debug=true
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --providers.docker.swarmmode=true
      - --providers.docker.watch=true
      - --providers.docker.network=${CLUSTER_NETWORK}
      - --providers.docker.exposedbydefault=false
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - world
    deploy:
      replicas: 1
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.docker.lbswarm=true
        - traefik.docker.network=${CLUSTER_NETWORK}
        - traefik.http.routers.traefik.entrypoints=web
        - traefik.http.routers.traefik.service=traefik1
        - traefik.http.services.traefik1.loadbalancer.server.port=80
        - traefik.http.services.traefik1.loadbalancer.server.scheme=http
        - traefik.http.services.traefik1.loadbalancer.passhostheader=true
        - traefik.http.services.traefik1.loadbalancer.sticky=true

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - 9001:8080
    stop_grace_period: 1m30s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints: [node.role==manager]

  server:
    image: grpc_server
    container_name: grpc_server
    build:
      dockerfile: $PWD/Dockerfile
      target: server
      context: server
    working_dir: /home/node/app
    networks:
      - world

  client:
    image: grpc_client
    container_name: grpc_client
    build:
      dockerfile: $PWD/Dockerfile
      target: client
      context: client
    working_dir: /home/node/app
    networks:
      - world

networks:
  world:
#     external: true
#     attachable: true
    driver: bridge
#     name: ${CLUSTER_NETWORK}
